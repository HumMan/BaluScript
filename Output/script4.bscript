class TMainClass
{
	class Vec
	{
		float[3] v;
		func Get(int i):float return v[i];
		func Set(int i,float val)v[i]=val;
	}
	class bigClass
	{
		int[] int_arr;
		Vec[] vectors;
	}
	func static F(int[] v,int[] s):int
	{
		int result=0;
		for(int i=0;i<=v.High();i+=1)
			result+=v[i];
		for(int i=0;i<=v.High();i+=1)
			result+=s[i];
		return result;
	}
	func static W(int[] v,int[] s):int[]
	{
		int[] result;
		result.SetHigh(v.High());
		for(int i=0;i<=v.High();i+=1)
			result[i]=v[i]+s[i];
		return result;
	}
	func static BigArrIntSum(bigClass &v):int
	{
		int result=0;
		for(int i=0;i<=v.int_arr.High();i+=1)
			result+=v.int_arr[i];
		return result;
	}
	func static Main
	{
		{
			int[] v,s;
			v.SetHigh(1);
			s.SetHigh(1);
			v[0]=3;
			v[1]=1;
			s[0]=-5;
			s[1]=2;
			int r=F(v,s);
			//W(v,s).SetHigh(-1);
			Print(r);
			v=s;
			Print(v==s);
			Print(F(v,s));
			Print(F(v,v));
		}
		{
			Vec v1,v2;
			v1.v[0]=1.0;
			v1.v[1]=0.5;
			v1.v[2]=0.2;
			v2=v1;
			Print(v2==v1);
			Print(v2.Get(2));
			v1.Set(0,0.55);
			Print(v1==v2);
		}
		{
			bigClass v,s;
			v.int_arr.SetHigh(100);
			for(int i=0;i<=v.int_arr.High()-1;i+=1)
				v.int_arr[i]=1;
			v.int_arr[100]=100;
			Print(BigArrIntSum(v));
			Print(s==v);
			s=v;
			Print(s==v);
		}
	}
}
